version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && ./start.sh"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DEBUG=True  # Development mode; set to False in production
      - DB_NAME=foodbot_db
      - DB_USER=foodbot_user
      - DB_PASSWORD=alloh1112
      - DB_HOST=db
      - DB_PORT=5432
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - ADMIN_GROUP_ID=${ADMIN_GROUP_ID}
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=foodbot_user
      - POSTGRES_PASSWORD=alloh1112
      - POSTGRES_DB=foodbot_db
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/sites-enabled/proskillsuz.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
#    ports:
#      - "443:443"
#      - "80:80"
    depends_on:
      - app
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    entrypoint: >
      sh -c "certbot certonly --webroot -w /var/www/certbot
      --email mainsec01@gmail.com
      --agree-tos
      --no-eff-email
      -d proskills.uz"

volumes:
  static_volume:
  media_volume:
  postgres_data:
